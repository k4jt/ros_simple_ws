<?xml version="1.0"?>
<robot name="robobox" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="width" value="0.63" />
    <xacro:property name="length" value="1.2" />
    <xacro:property name="height" value="0.778" />
    <xacro:property name="pi" value="3.1415" />
    <xacro:property name="small_wheel_radius" value="0.07" />
    <xacro:property name="small_wheel_length" value="0.04" />
    <xacro:property name="big_wheel_radius" value="0.14" />
    <xacro:property name="big_wheel_length" value="0.1" />
    <xacro:property name="camera_size" value="0.05" />

    <material name="black">
        <color rgba="0 0 0 1" />
    </material>

    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <mass value="${mass}" />
            <origin xyz=" 0 0 0"/>
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
    </xacro:macro>


    <xacro:macro name="wheel" params="prefix suffix offset_x offset_y offset_z radius length">
        <link name="${prefix}_${suffix}_wheel">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${radius}" length="${length}" />
                </geometry>
                <material name="black" />
                <origin xyz=" 0 0 0" rpy="0 0 0" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${radius}" length="${length}" />
                </geometry>
                <material name="black" />
                <origin xyz=" 0 0 0" rpy="0 0 0" />
            </collision>
            <xacro:default_inertial mass="1" />
            <gazebo reference="${prefix}_${suffix}_wheel">
                <material>Gazebo/Black</material>
            </gazebo>
        </link>
        <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
            <axis xyz="0 1 0" rpy="0 0 0" />
            <parent link="base_link" />
            <child link="${prefix}_${suffix}_wheel" />
            <origin xyz="${length * offset_x} ${width * offset_y} -${height/2 + offset_z}" rpy="0 0 0" />
        </joint>

        <!--transmission name="${prefix}_${suffix}_trans">
              <type>transmission_interface/SimpleTransmission</type>
              <joint name="${prefix}_${suffix}_wheel_hinge"/>
              <actuator name="${prefix}_${suffix}_Motor">
                    <hardwareInterface>EffortJointInterface</hardwareInterface>
                    <mechanicalReduction>10</mechanicalReduction>
              </actuator>
        </transmission-->

    </xacro:macro>


    <link name="base_link">
        <visual>
            <geometry>
                <box size="${length} ${width} ${height}" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size="${length} ${width} ${height}" />
            </geometry>
        </collision>
        <xacro:default_inertial mass="100" />
        <gazebo reference="base_link">
            <material>Gazebo/Red</material>
        </gazebo>
    </link>

    <link name="base_footprint">
        <visual>
          <geometry>
             <box size="0.001 0.001 0.001"/>
          </geometry>
          <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>
        <inertial>
          <mass value="0.0001"/>
          <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
        </inertial>	
    </link>
    <gazebo reference="base_footprint">
        <material>Gazebo/Blue</material>
    </gazebo>
    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 0" />
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>

    <xacro:wheel prefix="front" suffix="mid" offset_x="15.5" offset_y="0" offset_z="0" radius="${small_wheel_radius}" length="${small_wheel_length}"/>
    <xacro:wheel prefix="back" suffix="mid" offset_x="-15.5" offset_y="0" offset_z="0" radius="${small_wheel_radius}" length="${small_wheel_length}"/>

    <xacro:wheel prefix="mid" suffix="left" offset_x="0" offset_y="0.5" offset_z="-${big_wheel_radius / 2}" radius="${big_wheel_radius}" length="${big_wheel_length}"/>
    <xacro:wheel prefix="mid" suffix="right" offset_x="0" offset_y="-0.5" offset_z="-${big_wheel_radius / 2}" radius="${big_wheel_radius}" length="${big_wheel_length}"/>

  <!-- Camera -->
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${length/2} 0 ${height/2 + 0.1}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>


  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  <gazebo reference="camera_link">
    <sensor type="camera" name="front_camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>      
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>robobox/front_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  
  
  
   <!-- Hokuyo Laser >
    <joint name="hokuyo_joint" type="fixed">
        <axis xyz="0 1 0" />
        <origin xyz="${length/2} 0 ${height/2+0.1}" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="hokuyo_link"/>
      </joint>

  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  
  <gazebo reference="hokuyo_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.1570796</min_angle>
            <max_angle>3.1570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>300.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/robobox/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo-->
   
<!-- Hokuyo LIDAR for simulation -->
  <xacro:macro name="hokuyo_laser">
    <gazebo reference="base_laser_link">
      <sensor type="ray" name="laser">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-3.1415</min_angle>
              <max_angle>3.1415</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>Gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">
          <topicName>/robobox/laser/scan</topicName>
          <frameName>base_laser_link</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <xacro:macro name="sensor_hokuyo">
    <joint name="laser" type="fixed">
      <origin xyz="${length/2} 0 ${height/2+0.1}" rpy="0 0 0"/>
      <!--origin xyz="0.15 0.0 0.360" rpy="3.14159 0.0 0.0" /-->
      <parent link="base_link" />
      <child link="base_laser_link" />
    </joint>

    <link name="base_laser_link">
      <visual>
        <geometry>
          <box size="0.00 0.05 0.06" />
        </geometry>
        <material name="black" />
      </visual>
      <inertial>
        <mass value="0.000001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0"
          izz="0.0001" />
      </inertial>
    </link>

    <!-- Set up laser gazebo details -->
    <hokuyo_laser />
  </xacro:macro>

    <sensor_hokuyo />


    <!--gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />
      <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>100.0</updateRate>
        <leftJoint>mid_left_wheel_joint</leftJoint>
        <rightJoint>mid_right_wheel_joint</rightJoint>
        <wheelSeparation>${width}</wheelSeparation>
        <wheelDiameter>${2 * big_wheel_radius}</wheelDiameter>
        <wheelTorque>100</wheelTorque>
        <wheelAcceleration>10</wheelAcceleration>
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_footprint</robotBaseFrame>
      </plugin>
    </gazebo-->
    
</robot>
